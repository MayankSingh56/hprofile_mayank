name: Testing the workflow
on: workflow_dispatch

env:
  AWS_REGION: ap-south-1
  PUBLIC_ECR_REPO: public.ecr.aws/v5p7g7h5/pocapp

jobs:
  Testing: 
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Test
        run: mvn test

      - name: style
        run: mvn checkstyle:checkstyle

      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: sonar-scanner
        uses: warchant/setup-sonar-scanner@v7

      - name: sonarqube-server
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_ORGANIZATION_KEY }} \
            -Dsonar.sources=src/ \
            -Dsonar.junit.reportsPath=target/surefire-reports/ \
            -Dsonar.jacoco.reportsPath=target/jacoco.exec \
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

  Build:
    needs: Testing
    runs-on: ubuntu-latest
      
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: update db details
        run: |
          sed -i "s/^jdbc.username.*$/jdbc.username=${{ secrets.RDS_USER }}/" src/main/resources/application.properties
          sed -i "s/^jdbc.password.*$/jdbc.password=${{ secrets.RDS_PASSWORD }}/" src/main/resources/application.properties
          sed -i "s|^jdbc.url.*$|jdbc.url=${{ secrets.RDS_ENDPOINT }}|" src/main/resources/application.properties

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Public ECR
        run: |
          aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | \
            docker login --username AWS --password-stdin public.ecr.aws

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./
          push: true
          tags: |
            ${{ env.PUBLIC_ECR_REPO }}:latest
            ${{ env.PUBLIC_ECR_REPO }}:${{ github.run_id }}

      
